version: '3.8'

services:
  acp-agent:
    build: .
    container_name: acp-agent
    restart: unless-stopped
    ports:
      - "${ACP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - ACP_HOST=0.0.0.0
      - ACP_PORT=3000
      - LM_STUDIO_URL=${LM_STUDIO_URL:-http://host.docker.internal:1234/v1}
      - LM_STUDIO_MODEL=${LM_STUDIO_MODEL:-llama-3.2-3b-instruct}
      - LM_STUDIO_TIMEOUT=${LM_STUDIO_TIMEOUT:-30000}
      - AGENT_NAME=${AGENT_NAME:-AsistentePersonal}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - RUNTIME=${RUNTIME:-node}
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    networks:
      - acp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - lm-studio-proxy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Optional: LM Studio proxy service (if running LM Studio in another container)
  lm-studio-proxy:
    image: nginx:alpine
    container_name: lm-studio-proxy
    restart: unless-stopped
    ports:
      - "1234:1234"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - acp-network
    profiles:
      - with-proxy

  # Optional: Monitoring with Prometheus (for production)
  prometheus:
    image: prom/prometheus:latest
    container_name: acp-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - acp-network
    profiles:
      - monitoring

  # Optional: Log aggregation with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: acp-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - acp-network
    profiles:
      - monitoring
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  acp-network:
    driver: bridge